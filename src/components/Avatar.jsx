/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/model1.glb -o src/components/Avatar.jsx -r public 
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Avatar(props) {
  const { scene } = useGLTF("/models/model1.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Root} />
      <skinnedMesh
        geometry={nodes.Hair.geometry}
        material={materials["N00_000_Hair_00_HAIR (Instance)"]}
        skeleton={nodes.Hair.skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked"].geometry}
        material={materials["N00_000_00_Body_00_SKIN (Instance)"]}
        skeleton={nodes["Body_(merged)baked"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_1"].geometry}
        material={materials["N00_006_01_Shoes_01_CLOTH (Instance)"]}
        skeleton={nodes["Body_(merged)baked_1"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_2"].geometry}
        material={materials["N00_000_00_HairBack_00_HAIR (Instance)"]}
        skeleton={nodes["Body_(merged)baked_2"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_3"].geometry}
        material={materials["N00_002_01_Tops_01_CLOTH (Instance)"]}
        skeleton={nodes["Body_(merged)baked_3"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_4"].geometry}
        material={materials["Accessory_GlassesLowFrame_01_MATCAP (Instance)"]}
        skeleton={nodes["Body_(merged)baked_4"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_5"].geometry}
        material={materials["Accessory_GlassesLowLens_01_MATCAP (Instance)"]}
        skeleton={nodes["Body_(merged)baked_5"].skeleton}
      />
      <skinnedMesh
        geometry={nodes["Body_(merged)baked_6"].geometry}
        material={materials["N00_001_01_Bottoms_01_CLOTH (Instance)"]}
        skeleton={nodes["Body_(merged)baked_6"].skeleton}
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked"
        geometry={nodes["Face_(merged)(Clone)baked"].geometry}
        material={materials["N00_000_00_FaceMouth_00_FACE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_1"
        geometry={nodes["Face_(merged)(Clone)baked_1"].geometry}
        material={materials["N00_000_00_EyeIris_00_EYE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_1"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_1"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_1"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_2"
        geometry={nodes["Face_(merged)(Clone)baked_2"].geometry}
        material={materials["N00_000_00_EyeHighlight_00_EYE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_2"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_2"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_2"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_3"
        geometry={nodes["Face_(merged)(Clone)baked_3"].geometry}
        material={materials["N00_000_00_Face_00_SKIN (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_3"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_3"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_3"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_4"
        geometry={nodes["Face_(merged)(Clone)baked_4"].geometry}
        material={materials["N00_000_00_EyeWhite_00_EYE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_4"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_4"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_4"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_5"
        geometry={nodes["Face_(merged)(Clone)baked_5"].geometry}
        material={materials["N00_000_00_FaceBrow_00_FACE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_5"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_5"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_5"].morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Face_(merged)(Clone)baked_6"
        geometry={nodes["Face_(merged)(Clone)baked_6"].geometry}
        material={materials["N00_000_00_FaceEyeline_00_FACE (Instance)"]}
        skeleton={nodes["Face_(merged)(Clone)baked_6"].skeleton}
        morphTargetDictionary={
          nodes["Face_(merged)(Clone)baked_6"].morphTargetDictionary
        }
        morphTargetInfluences={
          nodes["Face_(merged)(Clone)baked_6"].morphTargetInfluences
        }
      />
    </group>
  );
}

useGLTF.preload("/models/model1.glb");
